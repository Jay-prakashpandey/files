SELECT 
    'CREATE TABLE ' || TABLE_SCHEMA || '.' || TABLE_NAME || ' (' ||
    LISTAGG(COLUMN_NAME || ' ' || DATA_TYPE || 
            CASE WHEN IS_NULLABLE = 'NO' THEN ' NOT NULL' ELSE '' END, ', ') 
        WITHIN GROUP (ORDER BY ORDINAL_POSITION) 
    || ');' AS create_table_ddl
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'PUBLIC'  -- Change to your schema
AND TABLE_NAME = 'EMPLOYEES'  -- Change to your table
GROUP BY TABLE_SCHEMA, TABLE_NAME;


DECLARE query STRING;
BEGIN
    -- Initialize the CREATE TABLE statement
    LET query = 'CREATE TABLE IF NOT EXISTS im_dm_dev_adhoc_db.dw_staging.INVESTMENT_DETAIL (\n';

    -- Loop through the columns in the information schema
    FOR row IN (
        SELECT 
            TRIM(column_name) AS column_name,
            TRIM(data_type) AS data_type,
            CASE 
                WHEN TRIM(data_type) IN ('NUMBER', 'DECIMAL', 'FLOAT') THEN numeric_precision
                ELSE character_maximum_length
            END AS size,
            TRIM(numeric_scale) AS numeric_precision,
            TRIM(column_default) AS default_values,
            CASE 
                WHEN TRIM(is_nullable) = 'NO' THEN 'NOT NULL' 
                ELSE NULL 
            END AS is_not_null,
            CASE 
                WHEN TRIM(is_unique) = 'YES' THEN 'UNIQUE' 
                ELSE NULL 
            END AS is_unique,
            CASE 
                WHEN TRIM(is_primary_key) = 'YES' THEN 'PRIMARY KEY' 
                ELSE NULL 
            END AS is_primary_key,
            TRIM(column_comment) AS comment
        FROM dev_adhoc_db.information_schema.columns
        WHERE TRIM(table_name) = 'INVESTMENT_DETAIL'
        ORDER BY ordinal_position
    ) DO
        -- Construct column definition
        query := query || row.column_name || ' ' || row.data_type;

        IF row.size IS NOT NULL AND row.size != '0' THEN
            query := query || '(' || row.size;
            IF row.numeric_precision IS NOT NULL THEN
                query := query || ', ' || row.numeric_precision;
            END IF;
            query := query || ')';
        END IF;

        -- Default values
        IF row.default_values IS NOT NULL THEN
            query := query || ' DEFAULT ';
            IF row.default_values = 'user' THEN
                query := query || 'CURRENT_USER';
            ELSIF row.default_values = 'sysdate' THEN
                query := query || 'CURRENT_DATE';
            ELSE
                query := query || row.default_values;
            END IF;
        END IF;

        -- Constraints
        IF row.is_not_null IS NOT NULL THEN
            query := query || ' ' || row.is_not_null;
        END IF;

        IF row.is_unique IS NOT NULL THEN
            query := query || ' ' || row.is_unique;
        END IF;

        IF row.is_primary_key IS NOT NULL THEN
            query := query || ' ' || row.is_primary_key;
        END IF;

        -- Comments
        IF row.comment IS NOT NULL THEN
            query := query || ' COMMENT ''' || row.comment || '''';
        END IF;

        query := query || ',\n';
    END FOR;

    -- Remove the last comma and add closing parenthesis
    query := LEFT(query, LEN(query) - 2) || '\n);';

    -- Execute the dynamically generated query
    EXECUTE IMMEDIATE query;
END;
